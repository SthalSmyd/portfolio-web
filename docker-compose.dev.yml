services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        ENV: dev
    ports:
      - "8000:8000"
    env_file:
      - .env.dev
    command: >
      ./wait-for-it.sh db:5432 &&
      python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      gunicorn backend.wsgi:application --bind 0.0.0.0:8000
    depends_on:
      - db
    networks:
      - app_net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        ENV: dev
    ports:
      - "3000:3000"
    env_file:
      - .env.dev
    command: >
      npm run build && npm run start
    networks:
      - app_net

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_net

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
      args:
        ENV: dev
    ports:
      - "443:443"
    volumes:
      - ./certs:/etc/letsencrypt/certificates
    depends_on:
      - backend
      - frontend
    restart: always
    networks:
      - app_net

volumes:
  postgres_data:

networks:
  app_net:
